ARM GAS  /tmp/ccq7RWEC.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB69:
  26              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f1xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f1xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f1xx_it.c ****   *
  16:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f1xx_it.c ****   */
  18:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f1xx_it.c **** 
  20:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f1xx_it.c **** #include "main.h"
  22:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  23:Core/Src/stm32f1xx_it.c **** #include "FreeRTOS.h"
  24:Core/Src/stm32f1xx_it.c **** #include "task.h"
  25:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  28:Core/Src/stm32f1xx_it.c **** 
  29:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  31:Core/Src/stm32f1xx_it.c **** 
  32:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccq7RWEC.s 			page 2


  33:Core/Src/stm32f1xx_it.c **** 
  34:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  36:Core/Src/stm32f1xx_it.c **** 
  37:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  38:Core/Src/stm32f1xx_it.c **** 
  39:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  41:Core/Src/stm32f1xx_it.c **** 
  42:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  43:Core/Src/stm32f1xx_it.c **** 
  44:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  46:Core/Src/stm32f1xx_it.c **** 
  47:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  48:Core/Src/stm32f1xx_it.c **** 
  49:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/stm32f1xx_it.c **** 
  52:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  53:Core/Src/stm32f1xx_it.c **** 
  54:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/stm32f1xx_it.c **** 
  57:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  58:Core/Src/stm32f1xx_it.c **** 
  59:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Core/Src/stm32f1xx_it.c **** 
  61:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  62:Core/Src/stm32f1xx_it.c **** 
  63:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  64:Core/Src/stm32f1xx_it.c **** 
  65:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  67:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32f1xx_it.c **** /**
  69:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Core/Src/stm32f1xx_it.c ****   */
  71:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  72:Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 72 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  73:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Core/Src/stm32f1xx_it.c **** 
  75:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Core/Src/stm32f1xx_it.c ****    while (1)
  34              		.loc 1 77 4 discriminator 1 view .LVU1
  78:Core/Src/stm32f1xx_it.c ****   {
  79:Core/Src/stm32f1xx_it.c ****   }
  35              		.loc 1 79 3 discriminator 1 view .LVU2
  77:Core/Src/stm32f1xx_it.c ****   {
ARM GAS  /tmp/ccq7RWEC.s 			page 3


  36              		.loc 1 77 10 discriminator 1 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE69:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu softvfp
  49              	HardFault_Handler:
  50              	.LFB70:
  80:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Core/Src/stm32f1xx_it.c **** }
  82:Core/Src/stm32f1xx_it.c **** 
  83:Core/Src/stm32f1xx_it.c **** /**
  84:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Core/Src/stm32f1xx_it.c ****   */
  86:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  87:Core/Src/stm32f1xx_it.c **** {
  51              		.loc 1 87 1 view -0
  52              		.cfi_startproc
  53              		@ Volatile: function does not return.
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.L4:
  88:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Core/Src/stm32f1xx_it.c **** 
  90:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Core/Src/stm32f1xx_it.c ****   while (1)
  58              		.loc 1 91 3 discriminator 1 view .LVU5
  92:Core/Src/stm32f1xx_it.c ****   {
  93:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Core/Src/stm32f1xx_it.c ****   }
  59              		.loc 1 95 3 discriminator 1 view .LVU6
  91:Core/Src/stm32f1xx_it.c ****   {
  60              		.loc 1 91 9 discriminator 1 view .LVU7
  61 0000 FEE7     		b	.L4
  62              		.cfi_endproc
  63              	.LFE70:
  65              		.section	.text.MemManage_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	MemManage_Handler
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu softvfp
  73              	MemManage_Handler:
  74              	.LFB71:
  96:Core/Src/stm32f1xx_it.c **** }
  97:Core/Src/stm32f1xx_it.c **** 
  98:Core/Src/stm32f1xx_it.c **** /**
  99:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 100:Core/Src/stm32f1xx_it.c ****   */
ARM GAS  /tmp/ccq7RWEC.s 			page 4


 101:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 102:Core/Src/stm32f1xx_it.c **** {
  75              		.loc 1 102 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 103:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:Core/Src/stm32f1xx_it.c **** 
 105:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f1xx_it.c ****   while (1)
  82              		.loc 1 106 3 discriminator 1 view .LVU9
 107:Core/Src/stm32f1xx_it.c ****   {
 108:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f1xx_it.c ****   }
  83              		.loc 1 110 3 discriminator 1 view .LVU10
 106:Core/Src/stm32f1xx_it.c ****   {
  84              		.loc 1 106 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE71:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu softvfp
  97              	BusFault_Handler:
  98              	.LFB72:
 111:Core/Src/stm32f1xx_it.c **** }
 112:Core/Src/stm32f1xx_it.c **** 
 113:Core/Src/stm32f1xx_it.c **** /**
 114:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 115:Core/Src/stm32f1xx_it.c ****   */
 116:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 117:Core/Src/stm32f1xx_it.c **** {
  99              		.loc 1 117 1 view -0
 100              		.cfi_startproc
 101              		@ Volatile: function does not return.
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105              	.L8:
 118:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:Core/Src/stm32f1xx_it.c **** 
 120:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 121:Core/Src/stm32f1xx_it.c ****   while (1)
 106              		.loc 1 121 3 discriminator 1 view .LVU13
 122:Core/Src/stm32f1xx_it.c ****   {
 123:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:Core/Src/stm32f1xx_it.c ****   }
 107              		.loc 1 125 3 discriminator 1 view .LVU14
ARM GAS  /tmp/ccq7RWEC.s 			page 5


 121:Core/Src/stm32f1xx_it.c ****   {
 108              		.loc 1 121 9 discriminator 1 view .LVU15
 109 0000 FEE7     		b	.L8
 110              		.cfi_endproc
 111              	.LFE72:
 113              		.section	.text.UsageFault_Handler,"ax",%progbits
 114              		.align	1
 115              		.global	UsageFault_Handler
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu softvfp
 121              	UsageFault_Handler:
 122              	.LFB73:
 126:Core/Src/stm32f1xx_it.c **** }
 127:Core/Src/stm32f1xx_it.c **** 
 128:Core/Src/stm32f1xx_it.c **** /**
 129:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:Core/Src/stm32f1xx_it.c ****   */
 131:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 132:Core/Src/stm32f1xx_it.c **** {
 123              		.loc 1 132 1 view -0
 124              		.cfi_startproc
 125              		@ Volatile: function does not return.
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129              	.L10:
 133:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:Core/Src/stm32f1xx_it.c **** 
 135:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:Core/Src/stm32f1xx_it.c ****   while (1)
 130              		.loc 1 136 3 discriminator 1 view .LVU17
 137:Core/Src/stm32f1xx_it.c ****   {
 138:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:Core/Src/stm32f1xx_it.c ****   }
 131              		.loc 1 140 3 discriminator 1 view .LVU18
 136:Core/Src/stm32f1xx_it.c ****   {
 132              		.loc 1 136 9 discriminator 1 view .LVU19
 133 0000 FEE7     		b	.L10
 134              		.cfi_endproc
 135              	.LFE73:
 137              		.section	.text.DebugMon_Handler,"ax",%progbits
 138              		.align	1
 139              		.global	DebugMon_Handler
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu softvfp
 145              	DebugMon_Handler:
 146              	.LFB74:
 141:Core/Src/stm32f1xx_it.c **** }
 142:Core/Src/stm32f1xx_it.c **** 
 143:Core/Src/stm32f1xx_it.c **** /**
 144:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 145:Core/Src/stm32f1xx_it.c ****   */
ARM GAS  /tmp/ccq7RWEC.s 			page 6


 146:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 147:Core/Src/stm32f1xx_it.c **** {
 147              		.loc 1 147 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 148:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 149:Core/Src/stm32f1xx_it.c **** 
 150:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 151:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 152:Core/Src/stm32f1xx_it.c **** 
 153:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 154:Core/Src/stm32f1xx_it.c **** }
 152              		.loc 1 154 1 view .LVU21
 153 0000 7047     		bx	lr
 154              		.cfi_endproc
 155              	.LFE74:
 157              		.section	.text.SysTick_Handler,"ax",%progbits
 158              		.align	1
 159              		.global	SysTick_Handler
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu softvfp
 165              	SysTick_Handler:
 166              	.LFB75:
 155:Core/Src/stm32f1xx_it.c **** 
 156:Core/Src/stm32f1xx_it.c **** /**
 157:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 158:Core/Src/stm32f1xx_it.c ****   */
 159:Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 160:Core/Src/stm32f1xx_it.c **** {
 167              		.loc 1 160 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 08B5     		push	{r3, lr}
 172              	.LCFI0:
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 3, -8
 175              		.cfi_offset 14, -4
 161:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 162:Core/Src/stm32f1xx_it.c **** 
 163:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 164:Core/Src/stm32f1xx_it.c ****   HAL_IncTick();
 176              		.loc 1 164 3 view .LVU23
 177 0002 FFF7FEFF 		bl	HAL_IncTick
 178              	.LVL0:
 165:Core/Src/stm32f1xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
 166:Core/Src/stm32f1xx_it.c ****   if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 179              		.loc 1 166 3 view .LVU24
 180              		.loc 1 166 7 is_stmt 0 view .LVU25
 181 0006 FFF7FEFF 		bl	xTaskGetSchedulerState
 182              	.LVL1:
 183              		.loc 1 166 6 view .LVU26
 184 000a 0128     		cmp	r0, #1
ARM GAS  /tmp/ccq7RWEC.s 			page 7


 185 000c 00D1     		bne	.L15
 186              	.L12:
 167:Core/Src/stm32f1xx_it.c ****   {
 168:Core/Src/stm32f1xx_it.c **** #endif /* INCLUDE_xTaskGetSchedulerState */
 169:Core/Src/stm32f1xx_it.c ****   xPortSysTickHandler();
 170:Core/Src/stm32f1xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
 171:Core/Src/stm32f1xx_it.c ****   }
 172:Core/Src/stm32f1xx_it.c **** #endif /* INCLUDE_xTaskGetSchedulerState */
 173:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 174:Core/Src/stm32f1xx_it.c **** 
 175:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 176:Core/Src/stm32f1xx_it.c **** }
 187              		.loc 1 176 1 view .LVU27
 188 000e 08BD     		pop	{r3, pc}
 189              	.L15:
 169:Core/Src/stm32f1xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
 190              		.loc 1 169 3 is_stmt 1 view .LVU28
 191 0010 FFF7FEFF 		bl	xPortSysTickHandler
 192              	.LVL2:
 193              		.loc 1 176 1 is_stmt 0 view .LVU29
 194 0014 FBE7     		b	.L12
 195              		.cfi_endproc
 196              	.LFE75:
 198              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 199              		.align	1
 200              		.global	EXTI1_IRQHandler
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu softvfp
 206              	EXTI1_IRQHandler:
 207              	.LFB76:
 177:Core/Src/stm32f1xx_it.c **** 
 178:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 179:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 180:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 181:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 182:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 183:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 184:Core/Src/stm32f1xx_it.c **** 
 185:Core/Src/stm32f1xx_it.c **** /**
 186:Core/Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line1 interrupt.
 187:Core/Src/stm32f1xx_it.c ****   */
 188:Core/Src/stm32f1xx_it.c **** void EXTI1_IRQHandler(void)
 189:Core/Src/stm32f1xx_it.c **** {
 208              		.loc 1 189 1 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212 0000 08B5     		push	{r3, lr}
 213              	.LCFI1:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
 190:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 191:Core/Src/stm32f1xx_it.c **** 
 192:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI1_IRQn 0 */
ARM GAS  /tmp/ccq7RWEC.s 			page 8


 193:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
 217              		.loc 1 193 3 view .LVU31
 218 0002 0220     		movs	r0, #2
 219 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 220              	.LVL3:
 194:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
 195:Core/Src/stm32f1xx_it.c **** 
 196:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI1_IRQn 1 */
 197:Core/Src/stm32f1xx_it.c **** }
 221              		.loc 1 197 1 is_stmt 0 view .LVU32
 222 0008 08BD     		pop	{r3, pc}
 223              		.cfi_endproc
 224              	.LFE76:
 226              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 227              		.align	1
 228              		.global	EXTI2_IRQHandler
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu softvfp
 234              	EXTI2_IRQHandler:
 235              	.LFB77:
 198:Core/Src/stm32f1xx_it.c **** 
 199:Core/Src/stm32f1xx_it.c **** /**
 200:Core/Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line2 interrupt.
 201:Core/Src/stm32f1xx_it.c ****   */
 202:Core/Src/stm32f1xx_it.c **** void EXTI2_IRQHandler(void)
 203:Core/Src/stm32f1xx_it.c **** {
 236              		.loc 1 203 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 08B5     		push	{r3, lr}
 241              	.LCFI2:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 3, -8
 244              		.cfi_offset 14, -4
 204:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI2_IRQn 0 */
 205:Core/Src/stm32f1xx_it.c **** 
 206:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI2_IRQn 0 */
 207:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
 245              		.loc 1 207 3 view .LVU34
 246 0002 0420     		movs	r0, #4
 247 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 248              	.LVL4:
 208:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI2_IRQn 1 */
 209:Core/Src/stm32f1xx_it.c **** 
 210:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI2_IRQn 1 */
 211:Core/Src/stm32f1xx_it.c **** }
 249              		.loc 1 211 1 is_stmt 0 view .LVU35
 250 0008 08BD     		pop	{r3, pc}
 251              		.cfi_endproc
 252              	.LFE77:
 254              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 255              		.align	1
 256              		.global	EXTI3_IRQHandler
 257              		.syntax unified
ARM GAS  /tmp/ccq7RWEC.s 			page 9


 258              		.thumb
 259              		.thumb_func
 260              		.fpu softvfp
 262              	EXTI3_IRQHandler:
 263              	.LFB78:
 212:Core/Src/stm32f1xx_it.c **** 
 213:Core/Src/stm32f1xx_it.c **** /**
 214:Core/Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line3 interrupt.
 215:Core/Src/stm32f1xx_it.c ****   */
 216:Core/Src/stm32f1xx_it.c **** void EXTI3_IRQHandler(void)
 217:Core/Src/stm32f1xx_it.c **** {
 264              		.loc 1 217 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI3:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
 218:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 219:Core/Src/stm32f1xx_it.c **** 
 220:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 221:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 273              		.loc 1 221 3 view .LVU37
 274 0002 0820     		movs	r0, #8
 275 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 276              	.LVL5:
 222:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 223:Core/Src/stm32f1xx_it.c **** 
 224:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 1 */
 225:Core/Src/stm32f1xx_it.c **** }
 277              		.loc 1 225 1 is_stmt 0 view .LVU38
 278 0008 08BD     		pop	{r3, pc}
 279              		.cfi_endproc
 280              	.LFE78:
 282              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 283              		.align	1
 284              		.global	EXTI4_IRQHandler
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu softvfp
 290              	EXTI4_IRQHandler:
 291              	.LFB79:
 226:Core/Src/stm32f1xx_it.c **** 
 227:Core/Src/stm32f1xx_it.c **** /**
 228:Core/Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line4 interrupt.
 229:Core/Src/stm32f1xx_it.c ****   */
 230:Core/Src/stm32f1xx_it.c **** void EXTI4_IRQHandler(void)
 231:Core/Src/stm32f1xx_it.c **** {
 292              		.loc 1 231 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296 0000 08B5     		push	{r3, lr}
 297              	.LCFI4:
ARM GAS  /tmp/ccq7RWEC.s 			page 10


 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 3, -8
 300              		.cfi_offset 14, -4
 232:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 233:Core/Src/stm32f1xx_it.c **** 
 234:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 235:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 301              		.loc 1 235 3 view .LVU40
 302 0002 1020     		movs	r0, #16
 303 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 304              	.LVL6:
 236:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 237:Core/Src/stm32f1xx_it.c **** 
 238:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 239:Core/Src/stm32f1xx_it.c **** }
 305              		.loc 1 239 1 is_stmt 0 view .LVU41
 306 0008 08BD     		pop	{r3, pc}
 307              		.cfi_endproc
 308              	.LFE79:
 310              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 311              		.align	1
 312              		.global	EXTI9_5_IRQHandler
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu softvfp
 318              	EXTI9_5_IRQHandler:
 319              	.LFB80:
 240:Core/Src/stm32f1xx_it.c **** 
 241:Core/Src/stm32f1xx_it.c **** /**
 242:Core/Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 243:Core/Src/stm32f1xx_it.c ****   */
 244:Core/Src/stm32f1xx_it.c **** void EXTI9_5_IRQHandler(void)
 245:Core/Src/stm32f1xx_it.c **** {
 320              		.loc 1 245 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 08B5     		push	{r3, lr}
 325              	.LCFI5:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 246:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 247:Core/Src/stm32f1xx_it.c **** 
 248:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 249:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 329              		.loc 1 249 3 view .LVU43
 330 0002 2020     		movs	r0, #32
 331 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 332              	.LVL7:
 250:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_6);
 333              		.loc 1 250 3 view .LVU44
 334 0008 4020     		movs	r0, #64
 335 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 336              	.LVL8:
 251:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
ARM GAS  /tmp/ccq7RWEC.s 			page 11


 252:Core/Src/stm32f1xx_it.c **** 
 253:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 254:Core/Src/stm32f1xx_it.c **** }
 337              		.loc 1 254 1 is_stmt 0 view .LVU45
 338 000e 08BD     		pop	{r3, pc}
 339              		.cfi_endproc
 340              	.LFE80:
 342              		.text
 343              	.Letext0:
 344              		.file 2 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default_types.h"
 345              		.file 3 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 346              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 347              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 348              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 349              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 350              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 351              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 352              		.file 10 "Core/Inc/FreeRTOSConfig.h"
ARM GAS  /tmp/ccq7RWEC.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
     /tmp/ccq7RWEC.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccq7RWEC.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccq7RWEC.s:42     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccq7RWEC.s:49     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccq7RWEC.s:66     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccq7RWEC.s:73     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccq7RWEC.s:90     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccq7RWEC.s:97     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccq7RWEC.s:114    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccq7RWEC.s:121    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccq7RWEC.s:138    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccq7RWEC.s:145    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccq7RWEC.s:158    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccq7RWEC.s:165    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccq7RWEC.s:199    .text.EXTI1_IRQHandler:0000000000000000 $t
     /tmp/ccq7RWEC.s:206    .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
     /tmp/ccq7RWEC.s:227    .text.EXTI2_IRQHandler:0000000000000000 $t
     /tmp/ccq7RWEC.s:234    .text.EXTI2_IRQHandler:0000000000000000 EXTI2_IRQHandler
     /tmp/ccq7RWEC.s:255    .text.EXTI3_IRQHandler:0000000000000000 $t
     /tmp/ccq7RWEC.s:262    .text.EXTI3_IRQHandler:0000000000000000 EXTI3_IRQHandler
     /tmp/ccq7RWEC.s:283    .text.EXTI4_IRQHandler:0000000000000000 $t
     /tmp/ccq7RWEC.s:290    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
     /tmp/ccq7RWEC.s:311    .text.EXTI9_5_IRQHandler:0000000000000000 $t
     /tmp/ccq7RWEC.s:318    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler

UNDEFINED SYMBOLS
HAL_IncTick
xTaskGetSchedulerState
xPortSysTickHandler
HAL_GPIO_EXTI_IRQHandler
